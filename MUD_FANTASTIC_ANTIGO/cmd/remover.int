classe cmd_remover
herda comando_comum
const txtajuda = "\b\c3Remover\b\n\
Sintaxe: REMOVER <objeto>\n\
         REMOVER <quantidade> <objeto>\n\
Seu personagem deixa de usar um objeto que está vestindo ou usando.\n\
Para remover tudo (até 10 objetos) tecle TUDO ao invés do objeto."
const posic = 5

func escr
  ret !arg1, arg0.msg("Remover o que?")
  refvar perm_msg = $perm_[arg0.jogperm].vestir
  ret perm_msg, $mensjog.msg(perm_msg, arg0)
  refvar alvo = ref(arg0.persoesc) # Quem vai remover
# Preenche a variável vest com o que está vestindo
  int1 vest.32 # Aonde está vestindo
  listaitem item
  epara item = alvo.dentro2.ini, item, item.depois
    vest.[item.obj.vestpos - 1] = 1
  efim
# Remove
  uint8 total
  listaobj l
  nomeobj n # Para reconhecer os itens
  n.ini(arg1, misc:objmax, misc:tudo)
  epara l.addfim(alvo.dentro2), l, l.ini.remove
    ref r = l.objini
    continuar !r.vestpos || !r.visivel(arg0) || !n.nome(r.ident, r.objtot)
    total++
    refvar valor = vest.bits & config:vestir[r.vestpos - 1]
    se valor
      listaitem item
      epara item = alvo.dentro2.ini, item, item.depois
        continuar !item.obj.vestpos
        sair valor & intbit(item.obj.vestpos - 1)
      efim
      alvo.msg("Antes precisa parar de usar " + item.obj.descnome + ".")
    senao
      refvar posic = int(r.vestpos)
      listaobj e
      epara e.addfim(alvo.evento), e, e.ini.remove
        ret e.objini.cmd_remover(alvo, r, posic, alvo), nulo
      efim
      epara e.addfim(r.evento), e, e.ini.remove
        ret e.objini.cmd_remover(alvo, r, posic, r), nulo
      efim
      vest.[r.vestpos - 1] = 0
      r.vestir(0)
      $mens.p(alvo, nulo, r)
      $mens.mvis1(r.i_msgremoveu ? r.i_msgremoveu : "$P remove $o.")
      epara e.addfim(alvo.evento), e, e.ini.remove
        e.objini.cmd_removeu(alvo, r, posic, alvo)
      efim
      epara e.addfim(r.evento), e, e.ini.remove
        e.objini.cmd_removeu(alvo, r, posic, r)
      efim
    fimse
  efim
# Ajusta variáveis
  !total && $mens.p(alvo) + $mens.mperso("$P não está usando isso.")


classe cmd_desmontar
herda comando_comum
#
const posic = 8
#

func escr
  se !arg1
    arg0.msg("Desmontar o quê?")
  senao
    ref i
    i = misc:itemdono(arg0, arg1)
    ret !i, arg0.msg("Você não vê " + arg1 + ".")
    ret i.var.z_dono != arg0.descnome && i.var.z_dono != arg0.var.z_dono, arg0.msg("Você não é \
don" + (arg0.msexo ? "o" : "a") + " dessa barraca.")
    ret txt(i) != "i_moveis051", arg0.msg("Não é possível desmontar " + arg1 + ".")
    ret txt(i) == "i_itens068", arg0.msg(i.descnome + " já está desarmad" + (i.msexo ? "o." : \
"a."))
    listaobj l
    listaobj k
    epara l.addfim(i.dentro2), l, l.ini.remove
      se l.objini.s_sala
        epara k.addfim(l.objini.dentro2), k, k.ini.remove
          se k.objini.jog
            ret arg0.msg("Não pode desmontar " + i.descnome + ". Ainda há jogadores lá dentro.")
            ret 1
          fimse
        efim
      fimse
    efim
    refvar b = criar("i_itens068", arg0, 1)
    $mens.p(arg0, nulo, i)
    $mens.mvis1("$P desmonta $o.")
    i.mudadono(b)
  fimse
