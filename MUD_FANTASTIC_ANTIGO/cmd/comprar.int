classe cmd_comprar
herda comando_comum, comum_negociar
const txtajuda = "\b\c3Comprar\b\n\
Sintaxe: COMPRAR <nome ou número do objeto>\n\
         COMPRAR <quantidade>  <nome ou número do objeto>\n\
Compra objetos de um vendedor.\n\
Para saber o que é vendido em algum lugar, tecle LISTA."

func escr
  ret !arg1, arg0.msg("Comprar o quê?")
  negociar_ini(arg0)
  txt200 lin # Texto da linha atual
  int32 linha # Qual linha está verificando
  txt100 nomeitem # O nome do item que está procurando
  uint32 quest # quantos pontos de quest cobra pelo item
  uint32 valor # Preço da aula
  uint32 nivel # Nível do item
  uint16 total # Quantos itens quer combrar
  listaobj l
  nomeobj n
  total = txt1(arg1)
  se intsub(arg1) < 2 || total == 0 || txt(total) != txt1(arg1)
    total = 1, nomeitem = arg1
  senao
    nomeitem = txt2(arg1)
  fimse
  l.addfim(arg0.dono.dentro2), n.ini(nomeitem, total)
  epara l.remove(arg0), l, l.ini.remove
    refvar p = ref(l.objini) # Personagem que está sendo verificado
    continuar !(p.lojaitem || p.lojainv || $s_[p.lojasala] || $a_[p.lojacasa] || $a_[p.lojachave]\
)
    continuar negociar_checa(arg0, p)
    continuar evento(arg0, p)
# Itens fixos - lojaitem
    textotxt t2
    epara t2.addfim(p.lojaitem(arg0)), t2.linhas, t2.remove
      continuar !t2.ini.texto
      lin = "i_" + txt1(t2.ini.texto), linha++
      continuar !n.nome([lin]:nome, 1) && txt(linha) != nomeitem
      nivel = txt2(t2.ini.texto) ?? [lin]:nivel
      valor = (100 + p.taxavenda) / 100 * [lin]:valor
      quest = [lin]:quest
      total > 100 && (total = 100)
      se arg0.var.z_moedas_ < valor * total
        refvar credit = arg0.dentro1.objini("i_itens047")
        se !credit
          lin = "Você não tem $" + valor * total + ", e não possui um cartão de crédito."
          ret arg0.msg(txtcopiamai(p.descnome, "A") + ": " + lin)
        senao
          se arg0.var.z_limite_ < valor * total
            lin = "Você não possui moedas suficientes e não há limite para compras em seu cartão \
de crédito."
            ret arg0.msg(txtcopiamai(p.descnome, "A") + ": " + lin)
          fimse
        fimse
      senao arg0.var.z_quest_ < quest * total
        ret arg0.msg("Você não tem " + quest * total + " pontos de aventura.")
      fimse
      txt100 erro
      uint16 totcompra
      ref item
      epara linha = 0, linha < 10 && total, linha++
        ref r = criar(lin, nulo, total)
        se arg0.pesoden - arg0.pesoveste + r.pesotot > arg0.pesomax
          apagar(r)
          erro = "Você não consegue carregar tanto peso."
          sair
        senao r.cabedentro(arg0) >= r.objtot
          totcompra += r.objtot
          total -= r.objtot
          arg0.var.z_quest_ -= r.objtot * quest
          se arg0.var.z_moedas_ < r.objtot * valor
            arg0.var.z_limite_ -= r.objtot * valor
            arg0.var.z_compras_ += r.objtot * valor
            arg0.var.z_cartao_ = 1
          senao
            arg0.var.z_moedas_ -= r.objtot * valor
          fimse
          item = r.mudadono(arg0, r.objtot)
        senao
          apagar(r)
          erro = "Você não consegue carregar tanta coisa."
          sair
        fimse
      efim
      ret !totcompra, arg0.msg(erro)
      $mens.p(arg0, p, item)
      se totcompra == 1
        se arg0.var.z_cartao_
          arg0.var.z_cartao_ = 0
          $mens.mtodos1("$P compra $o $d $A, e paga no cartão de crédito.")
        senao
          $mens.mtodos1("$P compra $o $d $A.")
        fimse
      senao
        se arg0.var.z_cartao_
          arg0.var.z_cartao_ = 0
          $mens.mtodos1("$P compra " + totcompra + "x $o $d $A, e paga no cartão de crédito.")
        senao
          $mens.mtodos1("$P compra " + totcompra + "x $o $d $A.")
        fimse
      fimse
      ret
    efim
# Itens que possui e itens em uma sala
    se 1
      listaobj e
      p.lojainv && e.addfim(p.dentro1)
      epara e.addfim($s_[p.lojasala].dentro1), e, e.ini.remove
        continuar txt(++linha) != arg1 && !n.nome(e.objini.ident, 1)
        ref r = e.objini
        valor = (100 + p.taxavenda) / 100 * r.valor
        total > r.objtot && (total = r.objtot)
        se r.cabedentro(arg0) < total
          ret arg0.msg("Você não consegue carregar tanta coisa.")
        senao arg0.pesoden - arg0.pesoveste + r.pesotot * total / r.objtot > arg0.pesomax
          ret arg0.msg("Você não consegue carregar tanto peso.")
        senao arg0.var.z_moedas_ < valor * total
          lin = "Você não tem $" + valor * total + "."
          ret arg0.msg(txtcopiamai(p.descnome, "A") + ": " + lin)
        fimse
        r = r.mudadono(arg0, total)
        se arg0.var.z_moedas_ < valor * total
          arg0.var.z_limite_ -= valor * total
          arg0.var.z_compras_ += valor * total
          arg0.var.z_cartao_ = 1
        senao
          arg0.var.z_moedas_ -= valor * total
        fimse
        $mens.p(arg0, p, r)
        se total == 1
          se arg0.var.z_cartao_
            arg0.var.z_cartao_ = 0
            $mens.mtodos1("$P compra $o $d $A, e paga no cartão de crédito.")
          senao
            $mens.mtodos1("$P compra $o $d $a.")
          fimse
        senao
          se arg0.var.z_cartao_
            arg0.dentro1.objini("i_itens047").var.z_comprou_ = 0
            arg0.var.z_cartao_ = 0
            $mens.mtodos1("$P compra " + total + "x $o $d $A, e paga no cartão de crédito.")
          senao
            $mens.mtodos1("$P compra $o $d $a.")
          fimse
        fimse
        ret
      efim
    fimse
# Casas
    se $a_[p.lojacasa]
      prog prg
      ref r
      epara prg.iniclasse("c_" + p.lojacasa), prg.lin, prg.depois
        r = $[prg.texto]
        sair r.area != p.lojacasa
        continuar r.nomejog || txt(++linha) != arg1 && !n.nome(r.ident, 1)
        se !arg0.senha
          ret arg0.msg("Você precisa ter jogo salvo para comprar uma casa.")
        senao arg0.pnivel < config:casanivel
          refvar m = "Você precisa estar no nível " + config:casanivel
          ret arg0.msg(m + " para comprar uma casa.")
        fimse
        valor = config:casajog
        lin = "cj " + txt2(arg0.sock.cnome)
        indiceitem item
        epara item.ini(lin + " "), txtsub(item.txt, 0, 2) == lin, item.depois
          valor--
        efim
        ret valor <= 0, arg0.msg("Atingido o limite de casas por jogador.")
        valor = (100 + p.taxavenda) / 100 * r.valor
        se item.obj("cj " + txt2(arg0.sock.cnome) + " " + p.lojacasa)
          ret arg0.msg("Você já tem uma casa aqui.")
        senao arg0.var.z_moedas_ < valor
          lin = "Você não tem $" + valor + "."
          ret arg0.msg(txtcopiamai(p.descnome, "A") + ": " + lin)
        fimse
        r.nomejog = "cj " + txt2(arg0.sock.cnome) + " " + p.lojacasa
        r.diataxa = 0 # Para atualizar a taxa de manutenção da casa
        r.tempotaxa = 1
        r.mudachave # Já faz r.objmudou=1
        r.limpa_sjog
        arg0.var.z_moedas_ -= valor
        r.salvar, arg0.salvar # Salva casa e personagem do jogador
        $mens.p(arg0, p)
        $mens.mens = r.nome ?? "uma casa"
        $mens.mtodos1("$P compra $m $d $a.")
        ret
      efim
    fimse
# Chave e fechadura da casa
    se $a_[p.lojachave]
      indiceitem item
      refvar casa = item.obj("cj " + txt2(arg0.sock.cnome) + " " + p.lojachave)
      se !casa
      senao txt(++linha) == arg1 || n.nome("chave da casa", 1)
        valor = (100 + p.taxavenda) / 100 * config:casachave
        se arg0.dentro1.total + 1 > arg0.objmax
          ret arg0.msg("Você não consegue carregar tanta coisa.")
        senao arg0.volden + comum_chave:voltot > arg0.volmax
          ret arg0.msg("Você não consegue carregar tanta coisa.")
        senao arg0.pesoden - arg0.pesoveste + comum_chave:pesotot > arg0.pesomax
          ret arg0.msg("Você não consegue carregar tanto peso.")
        senao arg0.var.z_moedas_ < valor
          lin = "Você não tem $" + valor + "."
          ret arg0.msg(txtcopiamai(p.descnome, "A") + ": " + lin)
        fimse
        refvar r = criar("comum_chave", arg0, 1)
        r.i_chave = casa.chave
        arg0.var.z_moedas_ -= valor
        $mens.p(arg0, p)
        $mens.mtodos1("$A fez uma chave para $p.")
        ret
      senao txt(++linha) == arg1 || n.nome("fechadura da casa", 1)
        valor = (100 + p.taxavenda) / 100 * config:casafechadura
        se arg0.var.z_moedas_ < valor
          lin = "Você não tem $" + valor + "."
          ret arg0.msg(txtcopiamai(p.descnome, "A") + ": " + lin)
        fimse
        arg0.var.z_moedas_ -= valor
        casa.mudachave # Já faz r.objmudou=1
        $mens.p(arg0, p, r)
        refvar m1 = "$A manda alguém para trocar a fechadura da "
        ret $mens.mtodos2(m1 + "sua casa.", m1 + "casa $d $p.")
      fimse
    fimse
  efim
  arg0.msg("Ninguém vende isso aqui.")

func evento # Gera evento para arg0 e arg1
  listaobj l
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret l.objini.cmd_comprar(arg0, arg1, arg0), 1
  efim
  epara l.addfim(arg1.evento), l, l.ini.remove
    ret l.objini.cmd_comprar(arg0, arg1, arg1), 1
  efim


classe cmd_buy
herda cmd_comprar
