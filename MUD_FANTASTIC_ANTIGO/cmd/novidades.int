classe adm_enews
herda comando_adm

func escr
  se !arg1
    arg0.msg("Sim, mas escrever o quê?")
    ret 1
  fimse
  se inttotal(arg2) > 20000
    arg0.msg("A mensagem é muito longa, deve ser igual ou inferior a 20000 caractéres.")
    ret 1
  fimse
  textotxt t_god
  datahora d
  se !t_god.ler("sav2/novidades.txt")
    arg0.msg("Erro no mural, contacte um administrador do MUD.")
    ret 1
  fimse
  d.agora
  t_god.addini(arg0.nome + " em " + d.dia + "/" + d.mes + "/" + d.ano + " as " + d.hora + ":" + \
d.min + ": " + arg1)
  se t_god.linhas >= 4000
    textopos pos
    pos = t_god.fim
    pos.remove
  fimse
  se !t_god.salvar("sav2/novidades.txt")
    arg0.msg("Erro ao salvar mensagem no mural , contacte um administrador.")
    ret 1
  fimse
  arg0.msg("Mensagem escrita: " + arg1)
  $mens.mmud1("Uma nova notícia foi publicada! digite novidades ou notícia para ler!")


classe adm_dnews
herda comando_adm, comando_editor

func escr
  se !arg0.sock.teditor.ler("sav2/novidades.txt")
    arg0.msg("Mural não encontrado.")
  senao
    arg0.sock.tpasso = arg1
    passo(arg0.sock, "\b")
  fimse

func passo
  casovar txtmin(txt(arg1, 0, 1))
  casose "\b"
    arg0.teditor.bytes == 1 && arg0.teditor.limpar
    arg0.leditor = arg0.teditor.ini
    arg0.leditor1 = arg0.teditor.ini
    arg0.leditor2 = arg0.teditor.fim
    arg0.leditor2.antes
    arg0.passo = este
    arg0.msg("Editando as novidades do mud " + arg0.tpasso + ", O opções, X salvar, Z sair")
    ret 1
  casose "z" # Sair do editor
    arg0.msg("Retornando ao jogo")
    arg0.passo = ""
    ret 1
  casose "x" # Salvar o texto
    se arg0.teditor.salvar("sav2/novidades.txt")
      arg0.msg("Alteração salva. " + arg0.tpasso)
    senao
      arg0.msg("Erro ao salvar: " + arg0.tpasso)
    fimse
    admlog(arg0, "alterou as mensagens do quadro de mensagens.")
    ret 1
  casofim
  ret passoeditor(arg0, arg1, 1000000, "Quadro de mensagens " + arg0.tpasso)
