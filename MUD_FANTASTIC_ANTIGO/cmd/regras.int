classe adm_eregra
herda comando_adm, comando_editor

func escr
  se !arg0.sock.teditor.ler("sav2/regras.txt")
    arg0.msg("Mural não encontrado.")
  senao
    arg0.sock.tpasso = arg1
    passo(arg0.sock, "\b")
  fimse

func passo
  casovar txtmin(txt(arg1, 0, 1))
  casose "\b"
    arg0.teditor.bytes == 1 && arg0.teditor.limpar
    arg0.leditor = arg0.teditor.ini
    arg0.leditor1 = arg0.teditor.ini
    arg0.leditor2 = arg0.teditor.fim
    arg0.leditor2.antes
    arg0.passo = este
    arg0.msg("Editando as regras do mud " + arg0.tpasso + ", O opções, X salvar, Z sair")
    ret 1
  casose "z" # Sair do editor
    arg0.msg("Retornando ao jogo")
    arg0.passo = ""
    ret 1
  casose "x" # Salvar o texto
    se arg0.teditor.salvar("sav2/regras.txt")
      arg0.msg("Alteração salva. " + arg0.tpasso)
    senao
      arg0.msg("Erro ao salvar: " + arg0.tpasso)
    fimse
    admlog(arg0, "fez alterações nas regras.")
    ret 1
  casofim
  ret passoeditor(arg0, arg1, 1000000, "editor de regras " + arg0.tpasso)


classe cmd_regras
herda comando_comum
const objnivel = 4
const posic = 0

func escr
  textotxt t_mural
  se !t_mural.ler("sav2/regras.txt")
    arg0.msg("Erro ao ler as regras, contacte um administrador.")
    ret 1
  fimse
  se t_mural.linhas <= 1
    arg0.msg("não existem regras no momento")
    ret 1
  fimse
  t_mural.dividelin(80, 97)
  arg0.msg2(t_mural.remove(1000))
